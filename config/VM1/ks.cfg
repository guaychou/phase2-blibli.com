#version=DEVEL
# System authorization information
auth --enableshadow --passalgo=sha512
# Use CDROM installation media
cdrom
# Use Text install
text
# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'
# System language
lang en_US.UTF-8

# Network information
network  --hostname=server1

# Root password
rootpw --iscrypted $6$b/t5PbHQZywPEfpr$8s8CTsEhDjTWrAypN2HFRl.A65y9bihpmnIqymKaJDQXr.cWrIw6H.8TwNtW/ZEdc4DP0YyGdKsgd7QpI3toQ0
# System timezone
timezone Asia/Jakarta --isUtc --nontp
user --groups=wheel --name=kevinchou --password=$6$7c66CV70rZkM6hST$waIIeLBTVBKuFJn5dX6aMOBvYYa0FdBAbdieZJzljepcTqgKncXS0eQJs/9DjxXYSovRLoQTpXVrDVHXcDKzp1 --iscrypted --gecos="kevinchou"
# System bootloader configuration
bootloader --append="crashkernel=auto" --location=mbr

# Configuring Network for NAT to access internet
network --bootproto=dhcp --device=enp0s8

# Configuring LVM
clearpart --all --initlabel --drives=sda
part /boot --fstype ext4 --size=256 --ondisk=sda
part pv.00  --size=7500 --grow --ondisk=sda
volgroup blibli pv.00  
logvol / --fstype="ext4" --name="rootlv" --vgname="blibli" --size=7000
logvol swap --fstype="swap" --name="swaplv" --vgname="blibli" --size=500

%packages
@core
net-tools
-iwl*firmware
-alsa-*
-plymouth*
-ivtv-*
-NetworkManager*
-ModemManager-glib
-wpa_supplicant
-aic94xx-*
-iprutils-*
-mariadb-*
-centos-logos
%end

%post --nochroot --log=/root/ks-post-nochroot.log --interpreter=/bin/bash

# Create Folder for installation
mkdir -p /mnt/sysimage/root/dns
mkdir -p /mnt/sysimage/opt/utils
mkdir -p /mnt/sysimage/root/semanage
mkdir -p /mnt/sysimage/root/glusterfs
mkdir -p /mnt/sysimage/root/mariadb
mkdir -p /mnt/sysimage/root/vsftpd
mkdir -p /mnt/sysimage/root/varnish
mkdir -p /mnt/sysimage/opt/blibli
mkdir -p /mnt/sysimage/root/expect
mkdir -p /mnt/sysimage/root/mailla
mkdir -p /mnt/sysimage/root/node_exporter
mkdir -p /mnt/sysimage/root/varnish_exporter
mkdir -p /mnt/sysimage/root/gluster_exporter
mkdir -p /mnt/sysimage/root/mariadb_exporter
mkdir -p /mnt/sysimage/root/bind_exporter
mkdir -p /mnt/sysimage/root/postfix_exporter
mkdir -p /mnt/sysimage/root/python-pip
mkdir -p /mnt/sysimage/root/flask
# Mount and Copy package from iso to the folder has been create

mount --bind /mnt/install/repo/Packages/dns /mnt/sysimage/root/dns
mount --bind /mnt/install/repo/Packages/utils /mnt/sysimage/opt/utils
mount --bind /mnt/install/repo/Packages/semanage /mnt/sysimage/root/semanage
mount --bind /mnt/install/repo/Packages/glusterfs /mnt/sysimage/root/glusterfs
mount --bind /mnt/install/repo/Packages/mariadb /mnt/sysimage/root/mariadb
mount --bind /mnt/install/repo/Packages/vsftpd /mnt/sysimage/root/vsftpd
mount --bind /mnt/install/repo/Packages/varnish /mnt/sysimage/root/varnish
mount --bind /mnt/install/repo/Packages/expect /mnt/sysimage/root/expect
mount --bind /mnt/install/repo/Packages/mailla /mnt/sysimage/root/mailla
cp -RTf /mnt/install/repo/Packages/blibli /mnt/sysimage/opt/blibli
mount --bind /mnt/install/repo/Packages/node_exporter /mnt/sysimage/root/node_exporter
mount --bind /mnt/install/repo/Packages/varnish_exporter /mnt/sysimage/root/varnish_exporter
mount --bind /mnt/install/repo/Packages/gluster_exporter /mnt/sysimage/root/gluster_exporter
mount --bind /mnt/install/repo/Packages/mariadb_exporter /mnt/sysimage/root/mariadb_exporter
mount --bind /mnt/install/repo/Packages/bind_exporter /mnt/sysimage/root/bind_exporter
mount --bind /mnt/install/repo/Packages/postfix_exporter /mnt/sysimage/root/postfix_exporter
mount --bind /mnt/install/repo/Packages/python-pip /mnt/sysimage/root/python-pip
mount --bind /mnt/install/repo/Packages/flask /mnt/sysimage/root/flask
%end

%post --log=/root/ks-post.log --interpreter=/bin/bash

# Configuring the interface , and set IP, Gateway , DNS , and enable at startup
interface=$(ls /etc/sysconfig/network-scripts | awk {' print $1 '} | head -1 | awk -F '-' {' print $2 '})
echo "The interface name of this system is $interface, Configuring . . . ."
sed -i -e 's/dhcp/static/g' /etc/sysconfig/network-scripts/ifcfg-$interface
sed -i -e 's/ONBOOT=no/ONBOOT=yes/g' /etc/sysconfig/network-scripts/ifcfg-$interface
echo -e "IPADDR=192.168.220.128\nNETMASK=255.255.255.0\nGATEWAY=192.168.220.1\n" >> /etc/sysconfig/network-scripts/ifcfg-$interface
echo -e "nameserver 192.168.220.128\nnameserver 8.8.8.8" >> /etc/resolv.conf
echo  "The Interface Has Been Configured . . ."

# Disable Dhclient to update resolv.conf
chattr +i /etc/resolv.conf

# Enabling the port so much port for our services :)
echo "Enabling the port so much port for our services :)"
firewall-offline-cmd --port=80:tcp
firewall-offline-cmd --port=21:tcp
firewall-offline-cmd --port=20:tcp
firewall-offline-cmd --port=40000:tcp
firewall-offline-cmd --port=9100:tcp
firewall-offline-cmd --port=9131:tcp
firewall-offline-cmd --port=9104:tcp
firewall-offline-cmd --port=9189:tcp
firewall-offline-cmd --port=9153:tcp
firewall-offline-cmd --port=9119:tcp
firewall-offline-cmd --port=9154:tcp
firewall-offline-cmd --port=53:udp
firewall-offline-cmd --port=5000:tcp

# Fixing the SSH to not use the DNS reverse lookup
echo "Fixing the slow ssh login prompt"
echo "because of OpenSSH daemon uses DNS to run a reverse lookup on the client hostname to make sure it's valid"
echo "UseDNS no" >> /etc/ssh/sshd_config

# Installing Semanage
echo "Installing Semanage"
find /root/semanage/ -type f -name "*.rpm" -exec rpm -Uvh {} +
# Installing Bind package to create DNS server
echo "Installing DNS server"
find /root/dns/ -type f -name "*.rpm" -exec rpm -Uvh {} +

# Configuring DNS Server
cp -f /opt/utils/named.conf /etc/named.conf
cp -f /opt/utils/db.* /var/named/data/
chown named:named /var/named/data/db.*
semanage fcontext -a -t named_zone_t /var/named/data/db.ku
semanage fcontext -a -t named_zone_t /var/named/data/db.220.168.192
setsebool -P named_write_master_zones=1 
semanage port -a -t dns_port_t -p tcp 8053 # Buat exporter

# Installing ftp server
find /root/vsftpd -type f -name "*.rpm" -exec rpm -Uvh {} +

# Installing GlusterFS and configuring firewall 
find /root/glusterfs/ -type f -name "*.rpm" -exec rpm -Uvh {} +
firewall-offline-cmd --add-service=glusterfs

#Installing MariaDB
find /root/mariadb/ -type f -name "*.rpm" -exec rpm -Uvh {} + 

# Installing Varnish cache server 
find /root/varnish -type f -name "*.rpm" -exec rpm -Uvh --nodeps {} + 
# Configuring varnish
sed -i -e 's/6081/80/g' /usr/lib/systemd/system/varnish.service
cp -f /opt/utils/default.vcl /etc/varnish/default.vcl

# Installing expect package
find /root/expect -type f -name "*.rpm" -exec rpm -ivh {} + 

# Add GlusterFS volume create and start service
cp -f /opt/blibli/glusterservice.service /etc/systemd/system/
cp -f /opt/blibli/*.mount /etc/systemd/system/
cp -f /opt/blibli/createAdmin.service /etc/systemd/system/
cp -f /opt/blibli/mysqlSecure.service /etc/systemd/system/

# Configuring VSftpd
touch /etc/vsftpd/ftpd.passwd
mkdir /etc/vsftpd/vsftpd_user_conf
cp -f /opt/utils/vsftpd.conf /etc/vsftpd/vsftpd.conf
cp -f /opt/utils/vsftpd /etc/pam.d/vsftpd
mkdir /opt/nginxconf
semanage boolean -m ftpd_full_access --on

# Create Script Folder
mkdir /opt/script/
cp -RTf /opt/utils/script/ /opt/script/
mv /opt/script/api /opt/
chmod 755 /opt/script/*.sh

# Give executeable permission to script needed by custom service
chmod 755 /opt/blibli/gluster.sh
chmod 755 /opt/blibli/mysqlSecure.sh
chmod 755 /opt/blibli/createAdmin.sh

# Installing some package to make send only postfix work
find /root/mailla -type f -name "*.rpm" -exec rpm -Uvh {} +
cp -f /opt/utils/main.cf /etc/postfix/
mkdir -p /etc/postfix/sasl
cp -f /opt/utils/sasl_passwd.db /etc/postfix/sasl/

# Installing python pip and flask to run api
find /root/python-pip -type f -name "*.rpm" -exec rpm -Uvh {} + 
find /root/flask -type f -name "*.whl" -exec pip install {} +

# Configuring exporter service
mkdir /opt/prometheus/
cp -R /root/*_exporter /opt/prometheus/
mv /opt/blibli/nodeexporter.service /etc/systemd/system
mv /opt/blibli/varnishexporter.service /etc/systemd/system
mv /opt/blibli/glusterexporter.service /etc/systemd/system
mv /opt/blibli/mariadbexporter.service /etc/systemd/system
mv /opt/blibli/bindexporter.service /etc/systemd/system
mv /opt/blibli/postfixexporter.service /etc/systemd/system
mv /opt/blibli/webservice.service /etc/systemd/system

# Enable the Nginx and DNS service
echo "Enable lot of service"
systemctl enable named
systemctl enable vsftpd
systemctl enable glusterd
systemctl enable mariadb
systemctl enable varnish
systemctl enable postfix
systemctl enable glusterservice
systemctl enable home.mount
systemctl enable opt-nginxconf.mount
systemctl enable createAdmin
systemctl enable mysqlSecure
systemctl enable nodeexporter
systemctl enable varnishexporter
systemctl enable glusterexporter
systemctl enable mariadbexporter
systemctl enable bindexporter
systemctl enable postfixexporter
systemctl enable webservice

# Speed up the grub timeout 
echo "SpeedingUp the grub timeout"
/bin/sed -i -e 's/5/0/g' /etc/default/grub

# Unmount directory created by no chroot section and delete folder
echo "umount directory and delete it !"
umount /root/semanage
umount /root/dns
umount /opt/utils
umount /root/glusterfs
umount /root/vsftpd
umount /root/varnish
umount /root/mariadb
umount /root/expect
umount /root/mailla
umount /root/mariadb_exporter
umount /root/varnish_exporter
umount /root/gluster_exporter
umount /root/node_exporter
umount /root/bind_exporter
umount /root/postfix_exporter
umount /root/python-pip
umount /root/flask
rm -rf /root/python-pip /root/flask /root/dns /opt/utils /root/semanage /root/glusterfs /root/vsftpd /root/varnish /root/mariadb /root/expect /root/mailla /root/*_exporter

# Updating new configuration file
echo "Updating new configuration file"
grub2-mkconfig -o /boot/grub2/grub.cfg

# Disable unecessary service
echo "Disable unecessary service"
systemctl disable sound.target

# Allright Good Luck :)
echo "All is done Good Luck :)"
%end
reboot --eject